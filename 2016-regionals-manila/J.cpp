#include <stdio.h>
#include <assert.h>
#include <math.h>
#include <vector>
using namespace std;
typedef long long i64;

// precomputed in about 5-10mins
const int sol[][2] = {
{241, 149},
{364, 225},
{631, 390},
{953, 589},
{1652, 1021},
{2495, 1542},
{4325, 2673},
{6532, 4037},
{11323, 6998},
{17101, 10569},
{29644, 18321},
{44771, 27670},
{77609, 47965},
{117212, 72441},
{203183, 125574},
{306865, 189653},
{531940, 328757},
{803383, 496518},
{1392637, 860697},
{2103284, 1299901},
{3645971, 2253334},
{5506469, 3403185},
{9545276, 5899305},
{14416123, 8909654},
{24989857, 15444581},
{37741900, 23325777},
{65424295, 40434438},
{98809577, 61067677},
{171283028, 105858733},
{258686831, 159877254},
{448424789, 277141761},
{677250916, 418564085},
{1173991339, 725566550},
{1773065917, 1095815001},
{275, 170},
{720, 445},
{1885, 1165},
{4935, 3050},
{12920, 7985},
{33825, 20905},
{88555, 54730},
{231840, 143285},
{606965, 375125},
{1589055, 982090},
{4160200, 2571145},
{10891545, 6731345},
{28514435, 17622890},
{74651760, 46137325},
{195440845, 120789085},
{511670775, 316229930},
{1339571480, 827900705},
{398, 246},
{1042, 644},
{2728, 1686},
{7142, 4414},
{18698, 11556},
{48952, 30254},
{128158, 79206},
{335522, 207364},
{878408, 542886},
{2299702, 1421294},
{6020698, 3720996},
{15762392, 9741694},
{41266478, 25504086},
{108037042, 66770564},
{282844648, 174807606},
{740496902, 457652254},
{1938646058, 1198149156},
{186, 115},
{309, 191},
{487, 301},
{809, 500},
{1275, 788},
{2118, 1309},
{3338, 2063},
{5545, 3427},
{8739, 5401},
{14517, 8972},
{22879, 14140},
{38006, 23489},
{59898, 37019},
{99501, 61495},
{156815, 96917},
{260497, 160996},
{410547, 253732},
{681990, 421493},
{1074826, 664279},
{1785473, 1103483},
{2813931, 1739105},
{4674429, 2888956},
{7366967, 4553036},
{12237814, 7563385},
{19286970, 11920003},
{32039013, 19801199},
{50493943, 31206973},
{83879225, 51840212},
{132194859, 81700916},
{219598662, 135719437},
{346090634, 213895775},
{574916761, 355318099},
{906077043, 559986409},
{1505151621, 930234860},
{220, 136},
{576, 356},
{1508, 932},
{3948, 2440},
{10336, 6388},
{27060, 16724},
{70844, 43784},
{185472, 114628},
{485572, 300100},
{1271244, 785672},
{3328160, 2056916},
{8713236, 5385076},
{22811548, 14098312},
{59721408, 36909860},
{156352676, 96631268},
{409336620, 252983944},
{1071657184, 662320564},
{254, 157},
{343, 212},
{665, 411},
{898, 555},
{1741, 1076},
{2351, 1453},
{4558, 2817},
{6155, 3804},
{11933, 7375},
{16114, 9959},
{31241, 19308},
{42187, 26073},
{81790, 50549},
{110447, 68260},
{214129, 132339},
{289154, 178707},
{560597, 346468},
{757015, 467861},
{1467662, 907065},
{1981891, 1224876},
{3842389, 2374727},
{5188658, 3206767},
{10059505, 6217116},
{13584083, 8395425},
{26336126, 16276621},
{35563591, 21979508},
{68948873, 42612747},
{93106690, 57543099},
{180510493, 111561620},
{243756479, 150649789},
{472582606, 292072113},
{638162747, 394406268},
{1237237325, 764654719},
{1670731762, 1032569015},
{165, 102},
{432, 267},
{1131, 699},
{2961, 1830},
{7752, 4791},
{20295, 12543},
{53133, 32838},
{139104, 85971},
{364179, 225075},
{953433, 589254},
{2496120, 1542687},
{6534927, 4038807},
{17108661, 10573734},
{44791056, 27682395},
{117264507, 72473451},
{307002465, 189737958},
{803742888, 496740423},
{2104226199, 1300483311},
{199, 123},
{521, 322},
{1364, 843},
{3571, 2207},
{9349, 5778},
{24476, 15127},
{64079, 39603},
{167761, 103682},
{439204, 271443},
{1149851, 710647},
{3010349, 1860498},
{7881196, 4870847},
{20633239, 12752043},
{54018521, 33385282},
{141422324, 87403803},
{370248451, 228826127},
{969323029, 599074578},
{288, 178},
{754, 466},
{1974, 1220},
{5168, 3194},
{13530, 8362},
{35422, 21892},
{92736, 57314},
{242786, 150050},
{635622, 392836},
{1664080, 1028458},
{4356618, 2692538},
{11405774, 7049156},
{29860704, 18454930},
{78176338, 48315634},
{204668310, 126491972},
{535828592, 331160282},
{1402817466, 866988874},
{377, 233},
{987, 610},
{2584, 1597},
{6765, 4181},
{17711, 10946},
{46368, 28657},
{121393, 75025},
{317811, 196418},
{832040, 514229},
{2178309, 1346269},
{5702887, 3524578},
{14930352, 9227465},
{39088169, 24157817},
{102334155, 63245986},
{267914296, 165580141},
{701408733, 433494437},
{1836311903, 1134903170},
{233, 144},
{610, 377},
{1597, 987},
{4181, 2584},
{10946, 6765},
{28657, 17711},
{75025, 46368},
{196418, 121393},
{514229, 317811},
{1346269, 832040},
{3524578, 2178309},
{9227465, 5702887},
{24157817, 14930352},
{63245986, 39088169},
{165580141, 102334155},
{433494437, 267914296},
{1134903170, 701408733},
{178, 110},
{466, 288},
{1220, 754},
{3194, 1974},
{8362, 5168},
{21892, 13530},
{57314, 35422},
{150050, 92736},
{392836, 242786},
{1028458, 635622},
{2692538, 1664080},
{7049156, 4356618},
{18454930, 11405774},
{48315634, 29860704},
{126491972, 78176338},
{331160282, 204668310},
{866988874, 535828592},
{322, 199},
{843, 521},
{2207, 1364},
{5778, 3571},
{15127, 9349},
{39603, 24476},
{103682, 64079},
{271443, 167761},
{710647, 439204},
{1860498, 1149851},
{4870847, 3010349},
{12752043, 7881196},
{33385282, 20633239},
{87403803, 54018521},
{228826127, 141422324},
{599074578, 370248451},
{1568397607, 969323029},
{267, 165},
{699, 432},
{1830, 1131},
{4791, 2961},
{12543, 7752},
{32838, 20295},
{85971, 53133},
{225075, 139104},
{589254, 364179},
{1542687, 953433},
{4038807, 2496120},
{10573734, 6534927},
{27682395, 17108661},
{72473451, 44791056},
{189737958, 117264507},
{496740423, 307002465},
{1300483311, 803742888},
{212, 131},
{411, 254},
{555, 343},
{1076, 665},
{1453, 898},
{2817, 1741},
{3804, 2351},
{7375, 4558},
{9959, 6155},
{19308, 11933},
{26073, 16114},
{50549, 31241},
{68260, 42187},
{132339, 81790},
{178707, 110447},
{346468, 214129},
{467861, 289154},
{907065, 560597},
{1224876, 757015},
{2374727, 1467662},
{3206767, 1981891},
{6217116, 3842389},
{8395425, 5188658},
{16276621, 10059505},
{21979508, 13584083},
{42612747, 26336126},
{57543099, 35563591},
{111561620, 68948873},
{150649789, 93106690},
{292072113, 180510493},
{394406268, 243756479},
{764654719, 472582606},
{1032569015, 638162747},
{2001892044, 1237237325},
{356, 220},
{932, 576},
{2440, 1508},
{6388, 3948},
{16724, 10336},
{43784, 27060},
{114628, 70844},
{300100, 185472},
{785672, 485572},
{2056916, 1271244},
{5385076, 3328160},
{14098312, 8713236},
{36909860, 22811548},
{96631268, 59721408},
{252983944, 156352676},
{662320564, 409336620},
{1733977748, 1071657184},
{191, 118},
{301, 186},
{500, 309},
{788, 487},
{1309, 809},
{2063, 1275},
{3427, 2118},
{5401, 3338},
{8972, 5545},
{14140, 8739},
{23489, 14517},
{37019, 22879},
{61495, 38006},
{96917, 59898},
{160996, 99501},
{253732, 156815},
{421493, 260497},
{664279, 410547},
{1103483, 681990},
{1739105, 1074826},
{2888956, 1785473},
{4553036, 2813931},
{7563385, 4674429},
{11920003, 7366967},
{19801199, 12237814},
{31206973, 19286970},
{51840212, 32039013},
{81700916, 50493943},
{135719437, 83879225},
{213895775, 132194859},
{355318099, 219598662},
{559986409, 346090634},
{930234860, 574916761},
{1466063452, 906077043},
{246, 152},
{644, 398},
{1686, 1042},
{4414, 2728},
{11556, 7142},
{30254, 18698},
{79206, 48952},
{207364, 128158},
{542886, 335522},
{1421294, 878408},
{3720996, 2299702},
{9741694, 6020698},
{25504086, 15762392},
{66770564, 41266478},
{174807606, 108037042},
{457652254, 282844648},
{1198149156, 740496902},
{170, 105},
{445, 275},
{1165, 720},
{3050, 1885},
{7985, 4935},
{20905, 12920},
{54730, 33825},
{143285, 88555},
{375125, 231840},
{982090, 606965},
{2571145, 1589055},
{6731345, 4160200},
{17622890, 10891545},
{46137325, 28514435},
{120789085, 74651760},
{316229930, 195440845},
{827900705, 511670775},
{225, 139},
{390, 241},
{589, 364},
{1021, 631},
{1542, 953},
{2673, 1652},
{4037, 2495},
{6998, 4325},
{10569, 6532},
{18321, 11323},
{27670, 17101},
{47965, 29644},
{72441, 44771},
{125574, 77609},
{189653, 117212},
{328757, 203183},
{496518, 306865},
{860697, 531940},
{1299901, 803383},
{2253334, 1392637},
{3403185, 2103284},
{5899305, 3645971},
{8909654, 5506469},
{15444581, 9545276},
{23325777, 14416123},
{40434438, 24989857},
{61067677, 37741900},
{105858733, 65424295},
{159877254, 98809577},
{277141761, 171283028},
{418564085, 258686831},
{725566550, 448424789},
{1095815001, 677250916},
{1899557889, 1173991339}};

bool quad(i64 b, i64 c, i64 D, i64 &x1, i64 &x2) {
    x1 = x2;
    i64 sqrt_d;

    if (b > 1e9) {
        long double bb = b * b;
        long double d = 5 * bb - D * 4;
        long double s = sqrtl(d);
        sqrt_d = s;
        if ((long double) sqrt_d * sqrt_d != d) return false;
    } else {
        // overflow
        i64 d = 5 * b * b - D * 4;
        sqrt_d = sqrt(d);
        if (sqrt_d * sqrt_d != d) return false;
    }

    i64 num = -b + sqrt_d;
    if (num % 2 != 0) x2 = -1;
    else x1 = num / 2;

    num = -b - sqrt_d;
    if (num % 2 != 0) x2 = -1;
    else x2 = num / 2;

    return true;
}
i64 abso(i64 x) {
    return x < 0 ? -x : x;
}

int main() {
    // precomputation step
    // for (i64 d = -30; d <= 30; d++) {
    //     fprintf(stderr, "s: %lld\n", d);
    //     for (i64 a = 100; a <= 2147483647; a++) {
    //         i64 x1, x2;
    //         if (quad(a, d - a * a, d, x1, x2)) {
    //             if (x1 >= 100) {
    //                 printf("{%lld, %lld},\n", a, x1);
    //             }
    //             if (x2 >= 100 && x2 != x1) {
    //                 printf("{%lld, %lld},\n", a, x2);
    //             }
    //         }
    //     }
    // }
    int sols = sizeof sol / sizeof sol[0];
    int t;
    scanf("%d", &t);
    while (t--) {
        int n;
        scanf("%d", &n);
        long double best = -1;
        i64 best_a = 0;
        i64 best_b = 0;
        for (int i = 0; i < sols; i++) {
            int a = sol[i][0];
            int b = sol[i][1];
            if (a <= n and b <= n) {
                long double la = a, lb = b;
                long double c = la * la + lb * (lb + la);
                if (c > best) {
                    best = c;
                    best_a = a;
                    best_b = b;
                }
            }
        }
        if (best == -1) {
            printf("impossible\n");
        } else {
            printf("%lld %lld\n", best_a, best_b);
        }
    }
}